### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.keyvault._key_vault_client_base
  id: _key_vault_client_base
  parent: com.microsoft.azure.keyvault
  children:
  - com.microsoft.azure.keyvault._key_vault_client_base.acceptLanguage()
  - com.microsoft.azure.keyvault._key_vault_client_base.apiVersion()
  - com.microsoft.azure.keyvault._key_vault_client_base.backupKey(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupSecret(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.backupSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificate(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKey(String,String,JsonWebKeyType)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  - com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  - com.microsoft.azure.keyvault._key_vault_client_base.decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificate(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContacts(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsWithServiceResponseAsync(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuer(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperation(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteKey(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteSecret(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.generateClientRequestId()
  - com.microsoft.azure.keyvault._key_vault_client_base.getAzureClient()
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificate(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContacts(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsWithServiceResponseAsync(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuer(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperation(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicy(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificates(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificates(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String,final Integer,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getCertificateWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificate(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String,final Integer,final ListOperationCallback<DeletedCertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKey(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecret(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKey(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeys(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeys(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getKeyWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecret(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecrets(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecrets(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNext(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault._key_vault_client_base.getSecretWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificate(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKey(String,String,JsonWebKey)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  - com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.longRunningOperationRetryTimeout()
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate(String,String,List<byte[]>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  - com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificate(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKey(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecret(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificate(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKey(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecret(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.restClient()
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreKey(String,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync(String,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreSecret(String,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync(String,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContacts(String,Contacts)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync(String,Contacts)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsWithServiceResponseAsync(String,Contacts)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecret(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperation(String,String,boolean)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync(String,String,boolean)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicy(String,String,CertificatePolicy)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync(String,String,CertificatePolicy)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKey(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecret(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault._key_vault_client_base.userAgent()
  - com.microsoft.azure.keyvault._key_vault_client_base.verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.withAcceptLanguage(String)
  - com.microsoft.azure.keyvault._key_vault_client_base.withGenerateClientRequestId(boolean)
  - com.microsoft.azure.keyvault._key_vault_client_base.withLongRunningOperationRetryTimeout(int)
  - com.microsoft.azure.keyvault._key_vault_client_base.wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: KeyVaultClientBase
  nameWithType: KeyVaultClientBase
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase
  type: Interface
  source:
    remote: &o0
      path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
      branch: v1.0.0
      repo: https://github.com/Azure/azure-keyvault-java
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 55
  package: com.microsoft.azure.keyvault
  summary: <p>The interface for <xref uid="com.microsoft.azure.keyvault._key_vault_client_base" data-throw-if-not-resolved="false">KeyVaultClientBase</xref> class. </p>
  syntax: &o1
    content: public interface KeyVaultClientBase
- uid: com.microsoft.azure.keyvault._key_vault_client_base.acceptLanguage()
  id: acceptLanguage()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: acceptLanguage()
  nameWithType: KeyVaultClientBase.acceptLanguage()
  fullName: String com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.acceptLanguage*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 88
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets Gets or sets the preferred language for the response..</p>

    <p></p>
  syntax:
    content: public String acceptLanguage()
    return:
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.apiVersion()
  id: apiVersion()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: apiVersion()
  nameWithType: KeyVaultClientBase.apiVersion()
  fullName: String com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.apiVersion*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 81
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets Client API version..</p>

    <p></p>
  syntax:
    content: public String apiVersion()
    return:
      type: "26831127"
      description: <p>the apiVersion value. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKey(String,String)
  id: backupKey(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.backupKey(String vaultBaseUrl, String keyName)
  fullName: BackupKeyResult com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 770
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public BackupKeyResult backupKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: com.microsoft.azure.keyvault.models._backup_key_result
      description: <p>the BackupKeyResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync(String,String)
  id: backupKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<BackupKeyResult> com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 793
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public Observable<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
      description: <p>the observable to the BackupKeyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  id: backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  nameWithType: KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  fullName: ServiceFuture<BackupKeyResult> com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 782
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyWithServiceResponseAsync(String,String)
  id: backupKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<BackupKeyResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 804
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<BackupKeyResult>> backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._backup_key_resulte7daa122
      description: <p>the observable to the BackupKeyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecret(String,String)
  id: backupSecret(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.backupSecret(String vaultBaseUrl, String secretName)
  fullName: BackupSecretResult com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2149
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public BackupSecretResult backupSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._backup_secret_result
      description: <p>the BackupSecretResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync(String,String)
  id: backupSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<BackupSecretResult> com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2170
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public Observable<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
      description: <p>the observable to the BackupSecretResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  id: backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  nameWithType: KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  fullName: ServiceFuture<BackupSecretResult> com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2160
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretWithServiceResponseAsync(String,String)
  id: backupSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<BackupSecretResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2180
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<BackupSecretResult>> backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._backup_secret_resulte7daa122
      description: <p>the observable to the BackupSecretResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificate(String,String)
  id: createCertificate(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName)
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2910
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2959
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String)
  id: createCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2933
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2988
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  id: createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2974
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  id: createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2922
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync(String,String)
  id: createCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2944
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3002
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKey(String,String,JsonWebKeyType)
  id: createKey(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 140
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  id: createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 195
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType)
  id: createKeyAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 165
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  id: createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 153
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  id: createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 230
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  id: createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 213
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  id: createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 177
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  id: createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 247
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.decrypt*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 926
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 955
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 941
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.decryptWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 969
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificate(String,String)
  id: deleteCertificate(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificate(String vaultBaseUrl, String certificateName)
  fullName: DeletedCertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2325
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public DeletedCertificateBundle deleteCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync(String,String)
  id: deleteCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<DeletedCertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2348
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  id: deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: ServiceFuture<DeletedCertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2337
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContacts(String)
  id: deleteCertificateContacts(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.deleteCertificateContacts(String vaultBaseUrl)
  fullName: Contacts com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContacts*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2461
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Contacts deleteCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>the Contacts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync(String)
  id: deleteCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl)
  fullName: Observable<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2482
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  id: deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2472
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsWithServiceResponseAsync(String)
  id: deleteCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2492
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Contacts>> deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuer(String,String)
  id: deleteCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2863
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public IssuerBundle deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync(String,String)
  id: deleteCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2886
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  id: deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2875
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerWithServiceResponseAsync(String,String)
  id: deleteCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2897
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperation(String,String)
  id: deleteCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperation*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3576
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateOperation deleteCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync(String,String)
  id: deleteCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3597
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  id: deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3587
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationWithServiceResponseAsync(String,String)
  id: deleteCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3607
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateWithServiceResponseAsync(String,String)
  id: deleteCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<DeletedCertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2359
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_certificate_bundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKey(String,String)
  id: deleteKey(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.deleteKey(String vaultBaseUrl, String keyName)
  fullName: DeletedKeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 373
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public DeletedKeyBundle deleteKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_key_bundle
      description: <p>the DeletedKeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync(String,String)
  id: deleteKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<DeletedKeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 396
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  id: deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: ServiceFuture<DeletedKeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 385
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyWithServiceResponseAsync(String,String)
  id: deleteKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<DeletedKeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 407
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_key_bundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecret(String,String)
  id: deleteSecret(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.deleteSecret(String vaultBaseUrl, String secretName)
  fullName: DeletedSecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1544
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public DeletedSecretBundle deleteSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_secret_bundle
      description: <p>the DeletedSecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync(String,String)
  id: deleteSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<DeletedSecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1567
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  id: deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: ServiceFuture<DeletedSecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1556
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretWithServiceResponseAsync(String,String)
  id: deleteSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<DeletedSecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1578
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_secret_bundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.encrypt*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 867
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 896
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 882
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.encryptWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 910
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.generateClientRequestId()
  id: generateClientRequestId()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: generateClientRequestId()
  nameWithType: KeyVaultClientBase.generateClientRequestId()
  fullName: boolean com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.generateClientRequestId*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 118
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax:
    content: public boolean generateClientRequestId()
    return:
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getAzureClient()
  id: getAzureClient()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getAzureClient()
  nameWithType: KeyVaultClientBase.getAzureClient()
  fullName: AzureClient com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getAzureClient*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 67
  package: com.microsoft.azure.keyvault
  summary: <p>Gets the <xref uid="" data-throw-if-not-resolved="false">AzureClient</xref> used for long running operations. </p>
  syntax:
    content: public AzureClient getAzureClient()
    return:
      type: c1c26e8d
      description: <p>the azure client; </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificate(String,String,String)
  id: getCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3440
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public CertificateBundle getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync(String,String,String)
  id: getCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3463
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  id: getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3452
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContacts(String)
  id: getCertificateContacts(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateContacts(String vaultBaseUrl)
  fullName: Contacts com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContacts*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2418
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Contacts getCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>the Contacts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync(String)
  id: getCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl)
  fullName: Observable<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2439
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Contacts> getCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  id: getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2429
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Contacts> getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsWithServiceResponseAsync(String)
  id: getCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2449
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Contacts>> getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuer(String,String)
  id: getCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2816
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public IssuerBundle getCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync(String,String)
  id: getCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2839
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  id: getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2828
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers(final String)
  id: getCertificateIssuers(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuers(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl)
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2504
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers(final String,final Integer)
  id: getCertificateIssuers(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2547
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String)
  id: getCertificateIssuersAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl)
  fullName: Observable<Page<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2525
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String,final Integer)
  id: getCertificateIssuersAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2570
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  id: getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2559
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  id: getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2515
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNext(final String)
  id: getCertificateIssuersNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNext(final String nextPageLink)
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4257
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuersNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync(final String)
  id: getCertificateIssuersNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink)
  fullName: Observable<Page<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4279
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  id: getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4269
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextWithServiceResponseAsync(final String)
  id: getCertificateIssuersNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4289
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync(final String)
  id: getCertificateIssuersWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2535
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  id: getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2581
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerWithServiceResponseAsync(String,String)
  id: getCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2850
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperation(String,String)
  id: getCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperation*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3533
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public CertificateOperation getCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync(String,String)
  id: getCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3554
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  id: getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3544
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationWithServiceResponseAsync(String,String)
  id: getCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3564
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicy(String,String)
  id: getCertificatePolicy(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatePolicy(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  fullName: CertificatePolicy com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicy*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3229
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public CertificatePolicy getCertificatePolicy(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>the CertificatePolicy object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync(String,String)
  id: getCertificatePolicyAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificatePolicy> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3252
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  id: getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: ServiceFuture<CertificatePolicy> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3241
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyWithServiceResponseAsync(String,String)
  id: getCertificatePolicyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificatePolicy>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3263
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_policye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificates(final String)
  id: getCertificates(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificates(final String vaultBaseUrl)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificates*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2235
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificates(final String,final Integer)
  id: getCertificates(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificates(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificates(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificates*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2278
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String)
  id: getCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2256
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String,final Integer)
  id: getCertificatesAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2301
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String,final Integer,final ListOperationCallback<CertificateItem>)
  id: getCertificatesAsync(final String,final Integer,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2290
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  id: getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2246
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNext(final String)
  id: getCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificatesNext(final String nextPageLink)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4213
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync(final String)
  id: getCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4235
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  id: getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4225
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextWithServiceResponseAsync(final String)
  id: getCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4245
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync(final String)
  id: getCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2266
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync(final String,final Integer)
  id: getCertificatesWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2312
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions(final String,final String)
  id: getCertificateVersions(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3132
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions(final String,final String,final Integer)
  id: getCertificateVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3179
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String)
  id: getCertificateVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3155
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String,final Integer)
  id: getCertificateVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3204
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  id: getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3192
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  id: getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3144
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNext(final String)
  id: getCertificateVersionsNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNext(final String nextPageLink)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4301
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync(final String)
  id: getCertificateVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4323
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  id: getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4313
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextWithServiceResponseAsync(final String)
  id: getCertificateVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4333
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync(final String,final String)
  id: getCertificateVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3166
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3216
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateWithServiceResponseAsync(String,String,String)
  id: getCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3474
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificate(String,String)
  id: getDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: DeletedCertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3818
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public DeletedCertificateBundle getDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync(String,String)
  id: getDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<DeletedCertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3841
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  id: getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: ServiceFuture<DeletedCertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3830
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates(final String)
  id: getDeletedCertificates(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl)
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3728
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates(final String,final Integer)
  id: getDeletedCertificates(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3771
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String)
  id: getDeletedCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl)
  fullName: Observable<Page<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3749
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String,final Integer)
  id: getDeletedCertificatesAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3794
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String,final Integer,final ListOperationCallback<DeletedCertificateItem>)
  id: getDeletedCertificatesAsync(final String,final Integer,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3783
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  id: getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3739
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNext(final String)
  id: getDeletedCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNext(final String nextPageLink)
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4345
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync(final String)
  id: getDeletedCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink)
  fullName: Observable<Page<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4367
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  id: getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4357
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextWithServiceResponseAsync(final String)
  id: getDeletedCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4377
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync(final String)
  id: getDeletedCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3759
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync(final String,final Integer)
  id: getDeletedCertificatesWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3805
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateWithServiceResponseAsync(String,String)
  id: getDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<DeletedCertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3852
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_certificate_bundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKey(String,String)
  id: getDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.getDeletedKey(String vaultBaseUrl, String keyName)
  fullName: DeletedKeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1302
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public DeletedKeyBundle getDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_key_bundle
      description: <p>the DeletedKeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync(String,String)
  id: getDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<DeletedKeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1323
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  id: getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: ServiceFuture<DeletedKeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1313
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys(final String)
  id: getDeletedKeys(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl)
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1220
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys(final String,final Integer)
  id: getDeletedKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1259
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String)
  id: getDeletedKeysAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl)
  fullName: Observable<Page<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1239
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String,final Integer)
  id: getDeletedKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1280
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  id: getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1270
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  id: getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1230
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNext(final String)
  id: getDeletedKeysNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedKeysNext(final String nextPageLink)
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4044
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync(final String)
  id: getDeletedKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink)
  fullName: Observable<Page<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4064
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  id: getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4055
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextWithServiceResponseAsync(final String)
  id: getDeletedKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4073
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync(final String)
  id: getDeletedKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1248
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  id: getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1290
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyWithServiceResponseAsync(String,String)
  id: getDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<DeletedKeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1333
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_key_bundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecret(String,String)
  id: getDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.getDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: DeletedSecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2021
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public DeletedSecretBundle getDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_secret_bundle
      description: <p>the DeletedSecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync(String,String)
  id: getDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<DeletedSecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2042
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  id: getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: ServiceFuture<DeletedSecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2032
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets(final String)
  id: getDeletedSecrets(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl)
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1939
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets(final String,final Integer)
  id: getDeletedSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1978
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String)
  id: getDeletedSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl)
  fullName: Observable<Page<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1958
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String,final Integer)
  id: getDeletedSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1999
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  id: getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1989
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  id: getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1949
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNext(final String)
  id: getDeletedSecretsNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNext(final String nextPageLink)
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4172
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync(final String)
  id: getDeletedSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink)
  fullName: Observable<Page<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4192
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  id: getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4183
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextWithServiceResponseAsync(final String)
  id: getDeletedSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4201
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync(final String)
  id: getDeletedSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1967
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  id: getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2009
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretWithServiceResponseAsync(String,String)
  id: getDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<DeletedSecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2052
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_secret_bundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKey(String,String,String)
  id: getKey(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 534
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public KeyBundle getKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync(String,String,String)
  id: getKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 559
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  id: getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 547
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeys(final String)
  id: getKeys(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getKeys(final String vaultBaseUrl)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeys*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 680
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeys(final String,final Integer)
  id: getKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeys*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 723
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String)
  id: getKeysAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 701
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String,final Integer)
  id: getKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 746
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  id: getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 735
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  id: getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 691
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNext(final String)
  id: getKeysNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeysNext(final String nextPageLink)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4001
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync(final String)
  id: getKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeysNextAsync(final String nextPageLink)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4023
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  id: getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4013
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextWithServiceResponseAsync(final String)
  id: getKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4033
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync(final String)
  id: getKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 711
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync(final String,final Integer)
  id: getKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 757
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions(final String,final String)
  id: getKeyVersions(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersions(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 584
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions(final String,final String,final Integer)
  id: getKeyVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 631
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String)
  id: getKeyVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 607
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String,final Integer)
  id: getKeyVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 656
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  id: getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 644
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  id: getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 596
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNext(final String)
  id: getKeyVersionsNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeyVersionsNext(final String nextPageLink)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3957
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeyVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync(final String)
  id: getKeyVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3979
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  id: getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3969
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextWithServiceResponseAsync(final String)
  id: getKeyVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3989
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync(final String,final String)
  id: getKeyVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 618
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 668
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyWithServiceResponseAsync(String,String,String)
  id: getKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 571
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecret(String,String,String)
  id: getSecret(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1705
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public SecretBundle getSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync(String,String,String)
  id: getSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1730
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  id: getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1718
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecrets(final String)
  id: getSecrets(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getSecrets(final String vaultBaseUrl)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecrets*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1754
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecrets(final String,final Integer)
  id: getSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecrets*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1797
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String)
  id: getSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1775
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String,final Integer)
  id: getSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1820
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  id: getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1809
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  id: getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1765
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNext(final String)
  id: getSecretsNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretsNext(final String nextPageLink)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4085
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync(final String)
  id: getSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4107
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  id: getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4097
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextWithServiceResponseAsync(final String)
  id: getSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4117
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync(final String)
  id: getSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1785
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync(final String,final Integer)
  id: getSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1831
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions(final String,final String)
  id: getSecretVersions(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersions(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1844
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions(final String,final String,final Integer)
  id: getSecretVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1891
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String)
  id: getSecretVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1867
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String,final Integer)
  id: getSecretVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1916
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  id: getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1904
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  id: getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1856
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNext(final String)
  id: getSecretVersionsNext(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretVersionsNext(final String nextPageLink)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNext*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4129
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync(final String)
  id: getSecretVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4151
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  id: getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4141
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextWithServiceResponseAsync(final String)
  id: getSecretVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4161
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync(final String,final String)
  id: getSecretVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1878
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1928
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretWithServiceResponseAsync(String,String,String)
  id: getSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.getSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1742
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificate(String,String,String)
  id: importCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3016
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3070
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String)
  id: importCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3041
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  id: importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3029
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3103
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  id: importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3087
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync(String,String,String)
  id: importCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3053
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3119
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKey(String,String,JsonWebKey)
  id: importKey(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 261
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  id: importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 314
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey)
  id: importKeyAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 286
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  id: importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 345
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  id: importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 330
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  id: importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 274
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  id: importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 298
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  id: importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 360
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.longRunningOperationRetryTimeout()
  id: longRunningOperationRetryTimeout()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: longRunningOperationRetryTimeout()
  nameWithType: KeyVaultClientBase.longRunningOperationRetryTimeout()
  fullName: int com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.longRunningOperationRetryTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 103
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax:
    content: public int longRunningOperationRetryTimeout()
    return:
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate(String,String,List<byte[]>)
  id: mergeCertificate(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3621
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  id: mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3673
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>)
  id: mergeCertificateAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3646
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  id: mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3702
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  id: mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3688
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  id: mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3634
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  id: mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3658
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  id: mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3716
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificate(String,String)
  id: purgeDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: void com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3864
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public void purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync(String,String)
  id: purgeDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3887
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public Observable<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3876
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateWithServiceResponseAsync(String,String)
  id: purgeDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3898
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKey(String,String)
  id: purgeDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.purgeDeletedKey(String vaultBaseUrl, String keyName)
  fullName: void com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1344
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public void purgeDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync(String,String)
  id: purgeDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1365
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1355
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyWithServiceResponseAsync(String,String)
  id: purgeDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1375
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecret(String,String)
  id: purgeDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: void com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2063
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public void purgeDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync(String,String)
  id: purgeDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2084
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2074
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretWithServiceResponseAsync(String,String)
  id: purgeDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2094
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificate(String,String)
  id: recoverDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3911
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public CertificateBundle recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync(String,String)
  id: recoverDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3934
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  id: recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3923
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateWithServiceResponseAsync(String,String)
  id: recoverDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3945
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKey(String,String)
  id: recoverDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.recoverDeletedKey(String vaultBaseUrl, String keyName)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1387
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public KeyBundle recoverDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync(String,String)
  id: recoverDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1408
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  id: recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1398
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyWithServiceResponseAsync(String,String)
  id: recoverDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1418
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecret(String,String)
  id: recoverDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2106
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public SecretBundle recoverDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync(String,String)
  id: recoverDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2127
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  id: recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2117
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretWithServiceResponseAsync(String,String)
  id: recoverDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2137
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restClient()
  id: restClient()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restClient()
  nameWithType: KeyVaultClientBase.restClient()
  fullName: RestClient com.microsoft.azure.keyvault.KeyVaultClientBase.restClient()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restClient*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 61
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the REST client.</p>

    <p></p>
  syntax:
    content: public RestClient restClient()
    return:
      type: 9545a295
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">RestClient</xref> object. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKey(String,byte [])
  id: restoreKey(String,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBase.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 817
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public KeyBundle restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync(String,byte [])
  id: restoreKeyAsync(String,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 840
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  id: restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 829
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyWithServiceResponseAsync(String,byte [])
  id: restoreKeyWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBase.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 851
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecret(String,byte [])
  id: restoreSecret(String,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBase.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2192
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public SecretBundle restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync(String,byte [])
  id: restoreSecretAsync(String,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2213
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  id: restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2203
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretWithServiceResponseAsync(String,byte [])
  id: restoreSecretWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBase.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2223
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContacts(String,Contacts)
  id: setCertificateContacts(String,Contacts)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBase.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  fullName: Contacts com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContacts*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2372
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Contacts setCertificateContacts(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>the Contacts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync(String,Contacts)
  id: setCertificateContactsAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  fullName: Observable<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2395
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  id: setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2384
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsWithServiceResponseAsync(String,Contacts)
  id: setCertificateContactsWithServiceResponseAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2406
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Contacts>> setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer(String,String,String)
  id: setCertificateIssuer(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2595
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2648
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String)
  id: setCertificateIssuerAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2620
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  id: setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2608
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2679
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  id: setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2664
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync(String,String,String)
  id: setCertificateIssuerWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2632
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2694
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecret(String,String,String)
  id: setSecret(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecret(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1432
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  id: setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1485
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String)
  id: setSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1457
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  id: setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1445
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  id: setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1516
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  id: setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1501
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync(String,String,String)
  id: setSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1469
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  id: setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1531
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  id: sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.sign*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 985
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  id: signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.signAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1014
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.signAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1000
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  id: signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.signWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1028
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1166
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1195
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1181
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1209
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate(String,String,String)
  id: updateCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3328
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3381
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String)
  id: updateCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3353
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3412
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  id: updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3397
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  id: updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3341
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer(String,String)
  id: updateCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2707
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2757
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String)
  id: updateCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2730
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  id: updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2719
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2788
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  id: updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2773
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync(String,String)
  id: updateCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2741
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2803
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperation(String,String,boolean)
  id: updateCertificateOperation(String,String,boolean)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBase.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperation*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3487
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateOperation updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync(String,String,boolean)
  id: updateCertificateOperationAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3510
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  id: updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3499
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  id: updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3521
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicy(String,String,CertificatePolicy)
  id: updateCertificatePolicy(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBase.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: CertificatePolicy com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicy*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3277
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public CertificatePolicy updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>the CertificatePolicy object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync(String,String,CertificatePolicy)
  id: updateCertificatePolicyAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: Observable<CertificatePolicy> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3302
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public Observable<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  id: updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: ServiceFuture<CertificatePolicy> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3290
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  id: updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: Observable<ServiceResponse<CertificatePolicy>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3314
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_policye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync(String,String,String)
  id: updateCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3365
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3427
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKey(String,String,String)
  id: updateKey(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 421
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  id: updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 474
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String)
  id: updateKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 446
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  id: updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 434
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  id: updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 505
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  id: updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 490
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync(String,String,String)
  id: updateKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 458
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  id: updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 520
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecret(String,String,String)
  id: updateSecret(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1592
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  id: updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecret*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1645
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String)
  id: updateSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1617
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  id: updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1605
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  id: updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1676
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  id: updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1661
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync(String,String,String)
  id: updateSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1629
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  id: updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1691
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.userAgent()
  id: userAgent()
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: userAgent()
  nameWithType: KeyVaultClientBase.userAgent()
  fullName: String com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent()
  overload: com.microsoft.azure.keyvault._key_vault_client_base.userAgent*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 74
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Gets the User-Agent header for the client.</p>

    <p></p>
  syntax:
    content: public String userAgent()
    return:
      type: "26831127"
      description: <p>the user agent string. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  id: verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBase.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: KeyVerifyResult com.microsoft.azure.keyvault.KeyVaultClientBase.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.verify*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1045
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyVerifyResult verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_verify_result
      description: <p>the KeyVerifyResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  id: verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: Observable<KeyVerifyResult> com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1076
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
      description: <p>the observable to the KeyVerifyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  id: verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  nameWithType: KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  fullName: ServiceFuture<KeyVerifyResult> com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1061
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  id: verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBase.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: Observable<ServiceResponse<KeyVerifyResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.verifyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1091
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyVerifyResult>> verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_verify_resulte7daa122
      description: <p>the observable to the KeyVerifyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.withAcceptLanguage(String)
  id: withAcceptLanguage(String)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: KeyVaultClientBase.withAcceptLanguage(String acceptLanguage)
  fullName: KeyVaultClientBase com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage(String acceptLanguage)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.withAcceptLanguage*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 96
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets Gets or sets the preferred language for the response..</p>

    <p></p>
  syntax:
    content: public KeyVaultClientBase withAcceptLanguage(String acceptLanguage)
    parameters:
    - id: acceptLanguage
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
    return:
      type: com.microsoft.azure.keyvault._key_vault_client_base
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.withGenerateClientRequestId(boolean)
  id: withGenerateClientRequestId(boolean)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: KeyVaultClientBase.withGenerateClientRequestId(boolean generateClientRequestId)
  fullName: KeyVaultClientBase com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId(boolean generateClientRequestId)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.withGenerateClientRequestId*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 126
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax:
    content: public KeyVaultClientBase withGenerateClientRequestId(boolean generateClientRequestId)
    parameters:
    - id: generateClientRequestId
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
    return:
      type: com.microsoft.azure.keyvault._key_vault_client_base
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.withLongRunningOperationRetryTimeout(int)
  id: withLongRunningOperationRetryTimeout(int)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: KeyVaultClientBase.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  fullName: KeyVaultClientBase com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.withLongRunningOperationRetryTimeout*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 111
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax:
    content: public KeyVaultClientBase withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
    parameters:
    - id: longRunningOperationRetryTimeout
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
    return:
      type: com.microsoft.azure.keyvault._key_vault_client_base
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.wrapKey*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1107
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1136
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1122
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault._key_vault_client_base
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  langs:
  - java
  name: wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1150
  package: com.microsoft.azure.keyvault
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 9545a295
  spec.java:
  - name: RestClient
    fullName: RestClient
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restClient*
  name: restClient
  nameWithType: KeyVaultClientBase.restClient
  fullName: RestClient com.microsoft.azure.keyvault.KeyVaultClientBase.restClient
  package: com.microsoft.azure.keyvault
- uid: c1c26e8d
  spec.java:
  - name: AzureClient
    fullName: AzureClient
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getAzureClient*
  name: getAzureClient
  nameWithType: KeyVaultClientBase.getAzureClient
  fullName: AzureClient com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient
  package: com.microsoft.azure.keyvault
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.keyvault._key_vault_client_base.userAgent*
  name: userAgent
  nameWithType: KeyVaultClientBase.userAgent
  fullName: String com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.apiVersion*
  name: apiVersion
  nameWithType: KeyVaultClientBase.apiVersion
  fullName: String com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.acceptLanguage*
  name: acceptLanguage
  nameWithType: KeyVaultClientBase.acceptLanguage
  fullName: String com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.withAcceptLanguage*
  name: withAcceptLanguage
  nameWithType: KeyVaultClientBase.withAcceptLanguage
  fullName: KeyVaultClientBase com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage
  package: com.microsoft.azure.keyvault
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.keyvault._key_vault_client_base.longRunningOperationRetryTimeout*
  name: longRunningOperationRetryTimeout
  nameWithType: KeyVaultClientBase.longRunningOperationRetryTimeout
  fullName: int com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.withLongRunningOperationRetryTimeout*
  name: withLongRunningOperationRetryTimeout
  nameWithType: KeyVaultClientBase.withLongRunningOperationRetryTimeout
  fullName: KeyVaultClientBase com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout
  package: com.microsoft.azure.keyvault
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.keyvault._key_vault_client_base.generateClientRequestId*
  name: generateClientRequestId
  nameWithType: KeyVaultClientBase.generateClientRequestId
  fullName: boolean com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.withGenerateClientRequestId*
  name: withGenerateClientRequestId
  nameWithType: KeyVaultClientBase.withGenerateClientRequestId
  fullName: KeyVaultClientBase com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId
  package: com.microsoft.azure.keyvault
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: a4c35d80
  spec.java:
  - name: KeyVaultErrorException
    fullName: KeyVaultErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKey*
  name: createKey
  nameWithType: KeyVaultClientBase.createKey
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.createKey
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._key_bundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models._key_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._key_bundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models._key_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyAsync*
  name: createKeyAsync
  nameWithType: KeyVaultClientBase.createKeyAsync
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._key_bundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models._key_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._key_bundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models._key_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createKeyWithServiceResponseAsync*
  name: createKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.createKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.keyvault.webkey._json_web_key_operation
    name: JsonWebKeyOperation
    fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation
    href: com.microsoft.azure.keyvault.webkey._json_web_key_operation.yml
  - name: '>'
    fullName: '>'
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKey*
  name: importKey
  nameWithType: KeyVaultClientBase.importKey
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.importKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyAsync*
  name: importKeyAsync
  nameWithType: KeyVaultClientBase.importKeyAsync
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importKeyWithServiceResponseAsync*
  name: importKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.importKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKey*
  name: deleteKey
  nameWithType: KeyVaultClientBase.deleteKey
  fullName: DeletedKeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_bundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models._deleted_key_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_bundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models._deleted_key_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyAsync*
  name: deleteKeyAsync
  nameWithType: KeyVaultClientBase.deleteKeyAsync
  fullName: ServiceFuture<DeletedKeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_bundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models._deleted_key_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._deleted_key_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_bundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models._deleted_key_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteKeyWithServiceResponseAsync*
  name: deleteKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DeletedKeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKey*
  name: updateKey
  nameWithType: KeyVaultClientBase.updateKey
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyAsync*
  name: updateKeyAsync
  nameWithType: KeyVaultClientBase.updateKeyAsync
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateKeyWithServiceResponseAsync*
  name: updateKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKey*
  name: getKey
  nameWithType: KeyVaultClientBase.getKey
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyAsync*
  name: getKeyAsync
  nameWithType: KeyVaultClientBase.getKeyAsync
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyWithServiceResponseAsync*
  name: getKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._key_item
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models._key_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersions*
  name: getKeyVersions
  nameWithType: KeyVaultClientBase.getKeyVersions
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._key_item
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models._key_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._key_item
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models._key_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsAsync*
  name: getKeyVersionsAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._key_item
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models._key_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._key_item
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models._key_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsWithServiceResponseAsync*
  name: getKeyVersionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 3437983f
  spec.java:
  - name: final Integer
    fullName: final Integer
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeys*
  name: getKeys
  nameWithType: KeyVaultClientBase.getKeys
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysAsync*
  name: getKeysAsync
  nameWithType: KeyVaultClientBase.getKeysAsync
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysWithServiceResponseAsync*
  name: getKeysWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeysWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKey*
  name: backupKey
  nameWithType: KeyVaultClientBase.backupKey
  fullName: BackupKeyResult com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._backup_key_result
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models._backup_key_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._backup_key_result
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models._backup_key_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyAsync*
  name: backupKeyAsync
  nameWithType: KeyVaultClientBase.backupKeyAsync
  fullName: ServiceFuture<BackupKeyResult> com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._backup_key_result
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models._backup_key_result.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._backup_key_resulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._backup_key_result
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models._backup_key_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupKeyWithServiceResponseAsync*
  name: backupKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.backupKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<BackupKeyResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKey*
  name: restoreKey
  nameWithType: KeyVaultClientBase.restoreKey
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyAsync*
  name: restoreKeyAsync
  nameWithType: KeyVaultClientBase.restoreKeyAsync
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreKeyWithServiceResponseAsync*
  name: restoreKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.restoreKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encrypt*
  name: encrypt
  nameWithType: KeyVaultClientBase.encrypt
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._key_operation_result
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models._key_operation_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._key_operation_result
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models._key_operation_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encryptAsync*
  name: encryptAsync
  nameWithType: KeyVaultClientBase.encryptAsync
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._key_operation_result
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models._key_operation_result.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._key_operation_result
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models._key_operation_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.encryptWithServiceResponseAsync*
  name: encryptWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.encryptWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decrypt*
  name: decrypt
  nameWithType: KeyVaultClientBase.decrypt
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decryptAsync*
  name: decryptAsync
  nameWithType: KeyVaultClientBase.decryptAsync
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.decryptWithServiceResponseAsync*
  name: decryptWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.decryptWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.sign*
  name: sign
  nameWithType: KeyVaultClientBase.sign
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.sign
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.signAsync*
  name: signAsync
  nameWithType: KeyVaultClientBase.signAsync
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.signWithServiceResponseAsync*
  name: signWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.signWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verify*
  name: verify
  nameWithType: KeyVaultClientBase.verify
  fullName: KeyVerifyResult com.microsoft.azure.keyvault.KeyVaultClientBase.verify
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._key_verify_result
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models._key_verify_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._key_verify_result
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models._key_verify_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verifyAsync*
  name: verifyAsync
  nameWithType: KeyVaultClientBase.verifyAsync
  fullName: ServiceFuture<KeyVerifyResult> com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._key_verify_result
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models._key_verify_result.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._key_verify_resulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._key_verify_result
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models._key_verify_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.verifyWithServiceResponseAsync*
  name: verifyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.verifyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyVerifyResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKey*
  name: wrapKey
  nameWithType: KeyVaultClientBase.wrapKey
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyAsync*
  name: wrapKeyAsync
  nameWithType: KeyVaultClientBase.wrapKeyAsync
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.wrapKeyWithServiceResponseAsync*
  name: wrapKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.wrapKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKey*
  name: unwrapKey
  nameWithType: KeyVaultClientBase.unwrapKey
  fullName: KeyOperationResult com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyAsync*
  name: unwrapKeyAsync
  nameWithType: KeyVaultClientBase.unwrapKeyAsync
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.unwrapKeyWithServiceResponseAsync*
  name: unwrapKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.unwrapKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_item
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeys*
  name: getDeletedKeys
  nameWithType: KeyVaultClientBase.getDeletedKeys
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_item
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_item
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysAsync*
  name: getDeletedKeysAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_item
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_item
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysWithServiceResponseAsync*
  name: getDeletedKeysWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKey*
  name: getDeletedKey
  nameWithType: KeyVaultClientBase.getDeletedKey
  fullName: DeletedKeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyAsync*
  name: getDeletedKeyAsync
  nameWithType: KeyVaultClientBase.getDeletedKeyAsync
  fullName: ServiceFuture<DeletedKeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeyWithServiceResponseAsync*
  name: getDeletedKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DeletedKeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKey*
  name: purgeDeletedKey
  nameWithType: KeyVaultClientBase.purgeDeletedKey
  fullName: void com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey
  package: com.microsoft.azure.keyvault
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyAsync*
  name: purgeDeletedKeyAsync
  nameWithType: KeyVaultClientBase.purgeDeletedKeyAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync
  package: com.microsoft.azure.keyvault
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 27015fa1
  spec.java:
  - name: Observable<ServiceResponse<Void>>
    fullName: Observable<ServiceResponse<Void>>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedKeyWithServiceResponseAsync*
  name: purgeDeletedKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKey*
  name: recoverDeletedKey
  nameWithType: KeyVaultClientBase.recoverDeletedKey
  fullName: KeyBundle com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyAsync*
  name: recoverDeletedKeyAsync
  nameWithType: KeyVaultClientBase.recoverDeletedKeyAsync
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedKeyWithServiceResponseAsync*
  name: recoverDeletedKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecret*
  name: setSecret
  nameWithType: KeyVaultClientBase.setSecret
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._secret_bundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models._secret_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._secret_bundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models._secret_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretAsync*
  name: setSecretAsync
  nameWithType: KeyVaultClientBase.setSecretAsync
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._secret_bundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models._secret_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._secret_bundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models._secret_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setSecretWithServiceResponseAsync*
  name: setSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecret*
  name: deleteSecret
  nameWithType: KeyVaultClientBase.deleteSecret
  fullName: DeletedSecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_bundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models._deleted_secret_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_bundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models._deleted_secret_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretAsync*
  name: deleteSecretAsync
  nameWithType: KeyVaultClientBase.deleteSecretAsync
  fullName: ServiceFuture<DeletedSecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_bundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models._deleted_secret_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._deleted_secret_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_bundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models._deleted_secret_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteSecretWithServiceResponseAsync*
  name: deleteSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DeletedSecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecret*
  name: updateSecret
  nameWithType: KeyVaultClientBase.updateSecret
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretAsync*
  name: updateSecretAsync
  nameWithType: KeyVaultClientBase.updateSecretAsync
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateSecretWithServiceResponseAsync*
  name: updateSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecret*
  name: getSecret
  nameWithType: KeyVaultClientBase.getSecret
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretAsync*
  name: getSecretAsync
  nameWithType: KeyVaultClientBase.getSecretAsync
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretWithServiceResponseAsync*
  name: getSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._secret_item
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models._secret_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecrets*
  name: getSecrets
  nameWithType: KeyVaultClientBase.getSecrets
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._secret_item
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models._secret_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._secret_item
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models._secret_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsAsync*
  name: getSecretsAsync
  nameWithType: KeyVaultClientBase.getSecretsAsync
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._secret_item
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models._secret_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._secret_item
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models._secret_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsWithServiceResponseAsync*
  name: getSecretsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersions*
  name: getSecretVersions
  nameWithType: KeyVaultClientBase.getSecretVersions
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsAsync*
  name: getSecretVersionsAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsWithServiceResponseAsync*
  name: getSecretVersionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_item
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecrets*
  name: getDeletedSecrets
  nameWithType: KeyVaultClientBase.getDeletedSecrets
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_item
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_item
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsAsync*
  name: getDeletedSecretsAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_item
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_item
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsWithServiceResponseAsync*
  name: getDeletedSecretsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecret*
  name: getDeletedSecret
  nameWithType: KeyVaultClientBase.getDeletedSecret
  fullName: DeletedSecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretAsync*
  name: getDeletedSecretAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretAsync
  fullName: ServiceFuture<DeletedSecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretWithServiceResponseAsync*
  name: getDeletedSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DeletedSecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecret*
  name: purgeDeletedSecret
  nameWithType: KeyVaultClientBase.purgeDeletedSecret
  fullName: void com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretAsync*
  name: purgeDeletedSecretAsync
  nameWithType: KeyVaultClientBase.purgeDeletedSecretAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedSecretWithServiceResponseAsync*
  name: purgeDeletedSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecret*
  name: recoverDeletedSecret
  nameWithType: KeyVaultClientBase.recoverDeletedSecret
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretAsync*
  name: recoverDeletedSecretAsync
  nameWithType: KeyVaultClientBase.recoverDeletedSecretAsync
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedSecretWithServiceResponseAsync*
  name: recoverDeletedSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecret*
  name: backupSecret
  nameWithType: KeyVaultClientBase.backupSecret
  fullName: BackupSecretResult com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._backup_secret_result
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models._backup_secret_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._backup_secret_result
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models._backup_secret_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretAsync*
  name: backupSecretAsync
  nameWithType: KeyVaultClientBase.backupSecretAsync
  fullName: ServiceFuture<BackupSecretResult> com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._backup_secret_result
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models._backup_secret_result.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._backup_secret_resulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._backup_secret_result
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models._backup_secret_result.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.backupSecretWithServiceResponseAsync*
  name: backupSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.backupSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<BackupSecretResult>> com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecret*
  name: restoreSecret
  nameWithType: KeyVaultClientBase.restoreSecret
  fullName: SecretBundle com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretAsync*
  name: restoreSecretAsync
  nameWithType: KeyVaultClientBase.restoreSecretAsync
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.restoreSecretWithServiceResponseAsync*
  name: restoreSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.restoreSecretWithServiceResponseAsync
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._certificate_item
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models._certificate_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificates*
  name: getCertificates
  nameWithType: KeyVaultClientBase.getCertificates
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._certificate_item
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models._certificate_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._certificate_item
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models._certificate_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesAsync*
  name: getCertificatesAsync
  nameWithType: KeyVaultClientBase.getCertificatesAsync
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._certificate_item
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models._certificate_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._certificate_item
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models._certificate_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesWithServiceResponseAsync*
  name: getCertificatesWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificatesWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificate*
  name: deleteCertificate
  nameWithType: KeyVaultClientBase.deleteCertificate
  fullName: DeletedCertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models._deleted_certificate_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models._deleted_certificate_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateAsync*
  name: deleteCertificateAsync
  nameWithType: KeyVaultClientBase.deleteCertificateAsync
  fullName: ServiceFuture<DeletedCertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models._deleted_certificate_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._deleted_certificate_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models._deleted_certificate_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateWithServiceResponseAsync*
  name: deleteCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DeletedCertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContacts*
  name: setCertificateContacts
  nameWithType: KeyVaultClientBase.setCertificateContacts
  fullName: Contacts com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models._contacts.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models._contacts.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsAsync*
  name: setCertificateContactsAsync
  nameWithType: KeyVaultClientBase.setCertificateContactsAsync
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models._contacts.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models._contacts.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateContactsWithServiceResponseAsync*
  name: setCertificateContactsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContacts*
  name: getCertificateContacts
  nameWithType: KeyVaultClientBase.getCertificateContacts
  fullName: Contacts com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsAsync*
  name: getCertificateContactsAsync
  nameWithType: KeyVaultClientBase.getCertificateContactsAsync
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateContactsWithServiceResponseAsync*
  name: getCertificateContactsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContacts*
  name: deleteCertificateContacts
  nameWithType: KeyVaultClientBase.deleteCertificateContacts
  fullName: Contacts com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsAsync*
  name: deleteCertificateContactsAsync
  nameWithType: KeyVaultClientBase.deleteCertificateContactsAsync
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateContactsWithServiceResponseAsync*
  name: deleteCertificateContactsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuers*
  name: getCertificateIssuers
  nameWithType: KeyVaultClientBase.getCertificateIssuers
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersAsync*
  name: getCertificateIssuersAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersWithServiceResponseAsync*
  name: getCertificateIssuersWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuer*
  name: setCertificateIssuer
  nameWithType: KeyVaultClientBase.setCertificateIssuer
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._issuer_bundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models._issuer_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._issuer_bundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models._issuer_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerAsync*
  name: setCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._issuer_bundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models._issuer_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._issuer_bundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models._issuer_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.setCertificateIssuerWithServiceResponseAsync*
  name: setCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuer*
  name: updateCertificateIssuer
  nameWithType: KeyVaultClientBase.updateCertificateIssuer
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerAsync*
  name: updateCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateIssuerWithServiceResponseAsync*
  name: updateCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuer*
  name: getCertificateIssuer
  nameWithType: KeyVaultClientBase.getCertificateIssuer
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerAsync*
  name: getCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuerAsync
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuerWithServiceResponseAsync*
  name: getCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuer*
  name: deleteCertificateIssuer
  nameWithType: KeyVaultClientBase.deleteCertificateIssuer
  fullName: IssuerBundle com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerAsync*
  name: deleteCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerAsync
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateIssuerWithServiceResponseAsync*
  name: deleteCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificate*
  name: createCertificate
  nameWithType: KeyVaultClientBase.createCertificate
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._certificate_operation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models._certificate_operation.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._certificate_operation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models._certificate_operation.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateAsync*
  name: createCertificateAsync
  nameWithType: KeyVaultClientBase.createCertificateAsync
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._certificate_operation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models._certificate_operation.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._certificate_operation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models._certificate_operation.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.createCertificateWithServiceResponseAsync*
  name: createCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.createCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificate*
  name: importCertificate
  nameWithType: KeyVaultClientBase.importCertificate
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._certificate_bundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models._certificate_bundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._certificate_bundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models._certificate_bundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateAsync*
  name: importCertificateAsync
  nameWithType: KeyVaultClientBase.importCertificateAsync
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._certificate_bundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models._certificate_bundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._certificate_bundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models._certificate_bundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.importCertificateWithServiceResponseAsync*
  name: importCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.importCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersions*
  name: getCertificateVersions
  nameWithType: KeyVaultClientBase.getCertificateVersions
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsAsync*
  name: getCertificateVersionsAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsWithServiceResponseAsync*
  name: getCertificateVersionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicy*
  name: getCertificatePolicy
  nameWithType: KeyVaultClientBase.getCertificatePolicy
  fullName: CertificatePolicy com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models._certificate_policya08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models._certificate_policy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models._certificate_policy.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models._certificate_policya08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models._certificate_policy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models._certificate_policy.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyAsync*
  name: getCertificatePolicyAsync
  nameWithType: KeyVaultClientBase.getCertificatePolicyAsync
  fullName: ServiceFuture<CertificatePolicy> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_policya08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models._certificate_policy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models._certificate_policy.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models._certificate_policye7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models._certificate_policy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models._certificate_policy.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatePolicyWithServiceResponseAsync*
  name: getCertificatePolicyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificatePolicy>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicy*
  name: updateCertificatePolicy
  nameWithType: KeyVaultClientBase.updateCertificatePolicy
  fullName: CertificatePolicy com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyAsync*
  name: updateCertificatePolicyAsync
  nameWithType: KeyVaultClientBase.updateCertificatePolicyAsync
  fullName: ServiceFuture<CertificatePolicy> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificatePolicyWithServiceResponseAsync*
  name: updateCertificatePolicyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificatePolicy>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificate*
  name: updateCertificate
  nameWithType: KeyVaultClientBase.updateCertificate
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateAsync*
  name: updateCertificateAsync
  nameWithType: KeyVaultClientBase.updateCertificateAsync
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateWithServiceResponseAsync*
  name: updateCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificate*
  name: getCertificate
  nameWithType: KeyVaultClientBase.getCertificate
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateAsync*
  name: getCertificateAsync
  nameWithType: KeyVaultClientBase.getCertificateAsync
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateWithServiceResponseAsync*
  name: getCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperation*
  name: updateCertificateOperation
  nameWithType: KeyVaultClientBase.updateCertificateOperation
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationAsync*
  name: updateCertificateOperationAsync
  nameWithType: KeyVaultClientBase.updateCertificateOperationAsync
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.updateCertificateOperationWithServiceResponseAsync*
  name: updateCertificateOperationWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperation*
  name: getCertificateOperation
  nameWithType: KeyVaultClientBase.getCertificateOperation
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationAsync*
  name: getCertificateOperationAsync
  nameWithType: KeyVaultClientBase.getCertificateOperationAsync
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateOperationWithServiceResponseAsync*
  name: getCertificateOperationWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperation*
  name: deleteCertificateOperation
  nameWithType: KeyVaultClientBase.deleteCertificateOperation
  fullName: CertificateOperation com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationAsync*
  name: deleteCertificateOperationAsync
  nameWithType: KeyVaultClientBase.deleteCertificateOperationAsync
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.deleteCertificateOperationWithServiceResponseAsync*
  name: deleteCertificateOperationWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: ec5d9e1e
  spec.java:
  - name: List<byte[]>
    fullName: List<byte[]>
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificate*
  name: mergeCertificate
  nameWithType: KeyVaultClientBase.mergeCertificate
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateAsync*
  name: mergeCertificateAsync
  nameWithType: KeyVaultClientBase.mergeCertificateAsync
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.mergeCertificateWithServiceResponseAsync*
  name: mergeCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.mergeCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificates*
  name: getDeletedCertificates
  nameWithType: KeyVaultClientBase.getDeletedCertificates
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesAsync*
  name: getDeletedCertificatesAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesWithServiceResponseAsync*
  name: getDeletedCertificatesWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificate*
  name: getDeletedCertificate
  nameWithType: KeyVaultClientBase.getDeletedCertificate
  fullName: DeletedCertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateAsync*
  name: getDeletedCertificateAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificateAsync
  fullName: ServiceFuture<DeletedCertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificateWithServiceResponseAsync*
  name: getDeletedCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<DeletedCertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificate*
  name: purgeDeletedCertificate
  nameWithType: KeyVaultClientBase.purgeDeletedCertificate
  fullName: void com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateAsync*
  name: purgeDeletedCertificateAsync
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.purgeDeletedCertificateWithServiceResponseAsync*
  name: purgeDeletedCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificate*
  name: recoverDeletedCertificate
  nameWithType: KeyVaultClientBase.recoverDeletedCertificate
  fullName: CertificateBundle com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateAsync*
  name: recoverDeletedCertificateAsync
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateAsync
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.recoverDeletedCertificateWithServiceResponseAsync*
  name: recoverDeletedCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNext*
  name: getKeyVersionsNext
  nameWithType: KeyVaultClientBase.getKeyVersionsNext
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._key_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._key_item
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models._key_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextAsync*
  name: getKeyVersionsNextAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsNextAsync
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeyVersionsNextWithServiceResponseAsync*
  name: getKeyVersionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNext*
  name: getKeysNext
  nameWithType: KeyVaultClientBase.getKeysNext
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextAsync*
  name: getKeysNextAsync
  nameWithType: KeyVaultClientBase.getKeysNextAsync
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getKeysNextWithServiceResponseAsync*
  name: getKeysNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeysNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNext*
  name: getDeletedKeysNext
  nameWithType: KeyVaultClientBase.getDeletedKeysNext
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._deleted_key_item
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextAsync*
  name: getDeletedKeysNextAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysNextAsync
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedKeysNextWithServiceResponseAsync*
  name: getDeletedKeysNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNext*
  name: getSecretsNext
  nameWithType: KeyVaultClientBase.getSecretsNext
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._secret_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._secret_item
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models._secret_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextAsync*
  name: getSecretsNextAsync
  nameWithType: KeyVaultClientBase.getSecretsNextAsync
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretsNextWithServiceResponseAsync*
  name: getSecretsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretsNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNext*
  name: getSecretVersionsNext
  nameWithType: KeyVaultClientBase.getSecretVersionsNext
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextAsync*
  name: getSecretVersionsNextAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsNextAsync
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getSecretVersionsNextWithServiceResponseAsync*
  name: getSecretVersionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNext*
  name: getDeletedSecretsNext
  nameWithType: KeyVaultClientBase.getDeletedSecretsNext
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._deleted_secret_item
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextAsync*
  name: getDeletedSecretsNextAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextAsync
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedSecretsNextWithServiceResponseAsync*
  name: getDeletedSecretsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNext*
  name: getCertificatesNext
  nameWithType: KeyVaultClientBase.getCertificatesNext
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._certificate_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._certificate_item
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models._certificate_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextAsync*
  name: getCertificatesNextAsync
  nameWithType: KeyVaultClientBase.getCertificatesNextAsync
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificatesNextWithServiceResponseAsync*
  name: getCertificatesNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNext*
  name: getCertificateIssuersNext
  nameWithType: KeyVaultClientBase.getCertificateIssuersNext
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextAsync*
  name: getCertificateIssuersNextAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextAsync
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateIssuersNextWithServiceResponseAsync*
  name: getCertificateIssuersNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNext*
  name: getCertificateVersionsNext
  nameWithType: KeyVaultClientBase.getCertificateVersionsNext
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextAsync*
  name: getCertificateVersionsNextAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextAsync
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getCertificateVersionsNextWithServiceResponseAsync*
  name: getCertificateVersionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNext*
  name: getDeletedCertificatesNext
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNext
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextAsync*
  name: getDeletedCertificatesNextAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextAsync
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault._key_vault_client_base.getDeletedCertificatesNextWithServiceResponseAsync*
  name: getDeletedCertificatesNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  parent: com.microsoft.azure.keyvault.implementation
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: KeyVaultClientBaseImpl
  nameWithType: KeyVaultClientBaseImpl
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl" data-throw-if-not-resolved="false">KeyVaultClientBaseImpl</xref> class. </p>
  syntax:
    content: public class KeyVaultClientBaseImpl
- uid: com.microsoft.azure.keyvault._key_vault_client_custom
  parent: com.microsoft.azure.keyvault
  href: com.microsoft.azure.keyvault._key_vault_client_custom.yml
  name: KeyVaultClientCustom
  nameWithType: KeyVaultClientCustom
  fullName: com.microsoft.azure.keyvault.KeyVaultClientCustom
  type: Interface
  syntax:
    content: public interface KeyVaultClientCustom
- uid: com.microsoft.azure.keyvault._key_vault_client_custom.restClient()
  parent: com.microsoft.azure.keyvault._key_vault_client_custom
  href: com.microsoft.azure.keyvault._key_vault_client_custom.yml
  name: restClient()
  nameWithType: KeyVaultClientCustom.restClient()
  fullName: RestClient com.microsoft.azure.keyvault.KeyVaultClientCustom.restClient()
  type: Method
  syntax:
    content: public RestClient restClient()
    return:
      type: 9545a295
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">RestClient</xref> instance. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getAzureClient()
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getAzureClient()
  nameWithType: KeyVaultClientBaseImpl.getAzureClient()
  fullName: AzureClient com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getAzureClient()
  type: Method
  summary: <p>Gets the <xref uid="" data-throw-if-not-resolved="false">AzureClient</xref> used for long running operations. </p>
  syntax:
    content: public AzureClient getAzureClient()
    return:
      type: c1c26e8d
      description: <p>the azure client; </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.userAgent()
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: userAgent()
  nameWithType: KeyVaultClientBaseImpl.userAgent()
  fullName: String com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.userAgent()
  type: Method
  summary: >-
    <p>Gets the User-Agent header for the client.</p>

    <p></p>
  syntax:
    content: public String userAgent()
    return:
      type: "26831127"
      description: <p>the user agent string. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.apiVersion()
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: apiVersion()
  nameWithType: KeyVaultClientBaseImpl.apiVersion()
  fullName: String com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.apiVersion()
  type: Method
  summary: >-
    <p>Gets Client API version.</p>

    <p></p>
  syntax:
    content: public String apiVersion()
    return:
      type: "26831127"
      description: <p>the apiVersion value. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.acceptLanguage()
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: acceptLanguage()
  nameWithType: KeyVaultClientBaseImpl.acceptLanguage()
  fullName: String com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.acceptLanguage()
  type: Method
  summary: >-
    <p>Gets Gets or sets the preferred language for the response.</p>

    <p></p>
  syntax:
    content: public String acceptLanguage()
    return:
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
- uid: com.microsoft.azure.keyvault._key_vault_client_base
  parent: com.microsoft.azure.keyvault
  href: com.microsoft.azure.keyvault._key_vault_client_base.yml
  name: KeyVaultClientBase
  nameWithType: KeyVaultClientBase
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase
  type: Interface
  summary: <p>The interface for <xref uid="com.microsoft.azure.keyvault._key_vault_client_base" data-throw-if-not-resolved="false">KeyVaultClientBase</xref> class. </p>
  syntax: *o1
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.withAcceptLanguage(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: KeyVaultClientBaseImpl.withAcceptLanguage(String acceptLanguage)
  fullName: KeyVaultClientBaseImpl com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withAcceptLanguage(String acceptLanguage)
  type: Method
  summary: >-
    <p>Sets Gets or sets the preferred language for the response.</p>

    <p></p>
  syntax:
    content: public KeyVaultClientBaseImpl withAcceptLanguage(String acceptLanguage)
    parameters:
    - id: acceptLanguage
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
    return:
      type: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.longRunningOperationRetryTimeout()
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: longRunningOperationRetryTimeout()
  nameWithType: KeyVaultClientBaseImpl.longRunningOperationRetryTimeout()
  fullName: int com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.longRunningOperationRetryTimeout()
  type: Method
  summary: >-
    <p>Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.</p>

    <p></p>
  syntax:
    content: public int longRunningOperationRetryTimeout()
    return:
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.withLongRunningOperationRetryTimeout(int)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: KeyVaultClientBaseImpl.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  fullName: KeyVaultClientBaseImpl com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  type: Method
  summary: >-
    <p>Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.</p>

    <p></p>
  syntax:
    content: public KeyVaultClientBaseImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
    parameters:
    - id: longRunningOperationRetryTimeout
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
    return:
      type: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.generateClientRequestId()
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: generateClientRequestId()
  nameWithType: KeyVaultClientBaseImpl.generateClientRequestId()
  fullName: boolean com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.generateClientRequestId()
  type: Method
  summary: >-
    <p>Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.</p>

    <p></p>
  syntax:
    content: public boolean generateClientRequestId()
    return:
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.withGenerateClientRequestId(boolean)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: KeyVaultClientBaseImpl.withGenerateClientRequestId(boolean generateClientRequestId)
  fullName: KeyVaultClientBaseImpl com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withGenerateClientRequestId(boolean generateClientRequestId)
  type: Method
  summary: >-
    <p>Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.</p>

    <p></p>
  syntax:
    content: public KeyVaultClientBaseImpl withGenerateClientRequestId(boolean generateClientRequestId)
    parameters:
    - id: generateClientRequestId
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
    return:
      type: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.models._key_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._key_bundle.yml
  name: KeyBundle
  nameWithType: KeyBundle
  fullName: com.microsoft.azure.keyvault.models.KeyBundle
  type: Class
  summary: <p>A <xref uid="com.microsoft.azure.keyvault.models._key_bundle" data-throw-if-not-resolved="false">KeyBundle</xref> consisting of a WebKey plus its attributes. </p>
  syntax:
    content: public class KeyBundle extends KeyBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKey(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey._json_web_key_type
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey._json_web_key_type.yml
  name: JsonWebKeyType
  nameWithType: JsonWebKeyType
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.keyvault.webkey._json_web_key_type" data-throw-if-not-resolved="false">JsonWebKeyType</xref>. </p>
  syntax:
    content: public class JsonWebKeyType
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKeyAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey._json_web_key_operation
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey._json_web_key_operation.yml
  name: JsonWebKeyOperation
  nameWithType: JsonWebKeyOperation
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.keyvault.webkey._json_web_key_operation" data-throw-if-not-resolved="false">JsonWebKeyOperation</xref>. </p>
  syntax:
    content: public class JsonWebKeyOperation
- uid: com.microsoft.azure.keyvault.models._key_attributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._key_attributes.yml
  name: KeyAttributes
  nameWithType: KeyAttributes
  fullName: com.microsoft.azure.keyvault.models.KeyAttributes
  type: Class
  summary: <p>The attributes of a key managed by the key vault service. </p>
  syntax:
    content: public class KeyAttributes extends Attributes
- uid: com.microsoft.azure.keyvault.models._json_web_key_curve_name
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._json_web_key_curve_name.yml
  name: JsonWebKeyCurveName
  nameWithType: JsonWebKeyCurveName
  fullName: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.keyvault.models._json_web_key_curve_name" data-throw-if-not-resolved="false">JsonWebKeyCurveName</xref>. </p>
  syntax:
    content: public class JsonWebKeyCurveName
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  type: Method
  summary: >-
    <p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey._json_web_key_type
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: <p>The key size in bytes. For example, 1024 or 2048. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models._json_web_key_curve_name
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'SECP256K1' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKey(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey._json_web_key
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey._json_web_key.yml
  name: JsonWebKey
  nameWithType: JsonWebKey
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKey
  type: Class
  summary: <p>As of <ulink url="http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18">http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18</ulink>. </p>
  syntax:
    content: public class JsonWebKey
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKeyAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey._json_web_key
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models._deleted_key_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._deleted_key_bundle.yml
  name: DeletedKeyBundle
  nameWithType: DeletedKeyBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
  type: Class
  summary: <p>A <xref uid="com.microsoft.azure.keyvault.models._deleted_key_bundle" data-throw-if-not-resolved="false">DeletedKeyBundle</xref> consisting of a WebKey plus its <xref uid="com.microsoft.azure.keyvault.models._attributes" data-throw-if-not-resolved="false">Attributes</xref> and deletion info. </p>
  syntax:
    content: public class DeletedKeyBundle extends KeyBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.deleteKey(String vaultBaseUrl, String keyName)
  fullName: DeletedKeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public DeletedKeyBundle deleteKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_key_bundle
      description: <p>the DeletedKeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: ServiceFuture<DeletedKeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<DeletedKeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<DeletedKeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_key_bundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKey(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey._json_web_key_operationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models._key_attributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKey(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public KeyBundle getKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: >-
    <p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models._key_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._key_item.yml
  name: KeyItem
  nameWithType: KeyItem
  fullName: com.microsoft.azure.keyvault.models.KeyItem
  type: Class
  summary: <p>The key item containing key metadata. </p>
  syntax:
    content: public class KeyItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersions(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeys(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models._backup_key_result
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._backup_key_result.yml
  name: BackupKeyResult
  nameWithType: BackupKeyResult
  fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
  type: Class
  summary: <p>The backup key result, containing the backup blob. </p>
  syntax:
    content: public class BackupKeyResult
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.backupKey(String vaultBaseUrl, String keyName)
  fullName: BackupKeyResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public BackupKeyResult backupKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: com.microsoft.azure.keyvault.models._backup_key_result
      description: <p>the BackupKeyResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  fullName: ServiceFuture<BackupKeyResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<BackupKeyResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public Observable<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._backup_key_resulta08ddfce
      description: <p>the observable to the BackupKeyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<BackupKeyResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<BackupKeyResult>> backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._backup_key_resulte7daa122
      description: <p>the observable to the BackupKeyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreKey(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  type: Method
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public KeyBundle restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreKeyAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  type: Method
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreKeyWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  type: Method
  summary: >-
    <p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models._key_operation_result
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._key_operation_result.yml
  name: KeyOperationResult
  nameWithType: KeyOperationResult
  fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
  type: Class
  summary: <p>The key operation result. </p>
  syntax:
    content: public class KeyOperationResult
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm.yml
  name: JsonWebKeyEncryptionAlgorithm
  nameWithType: JsonWebKeyEncryptionAlgorithm
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm" data-throw-if-not-resolved="false">JsonWebKeyEncryptionAlgorithm</xref>. </p>
  syntax:
    content: public class JsonWebKeyEncryptionAlgorithm
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm.yml
  name: JsonWebKeySignatureAlgorithm
  nameWithType: JsonWebKeySignatureAlgorithm
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
  type: Class
  summary: <p>Defines values for <xref uid="com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm" data-throw-if-not-resolved="false">JsonWebKeySignatureAlgorithm</xref>. </p>
  syntax:
    content: public class JsonWebKeySignatureAlgorithm
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.models._key_verify_result
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._key_verify_result.yml
  name: KeyVerifyResult
  nameWithType: KeyVerifyResult
  fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
  type: Class
  summary: <p>The key verify result. </p>
  syntax:
    content: public class KeyVerifyResult
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBaseImpl.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: KeyVerifyResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  type: Method
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyVerifyResult verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_verify_result
      description: <p>the KeyVerifyResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  fullName: ServiceFuture<KeyVerifyResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  type: Method
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: Observable<KeyVerifyResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  type: Method
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_verify_resulta08ddfce
      description: <p>the observable to the KeyVerifyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBaseImpl.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: Observable<ServiceResponse<KeyVerifyResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  type: Method
  summary: >-
    <p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyVerifyResult>> verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_signature_algorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ECDSA256' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_verify_resulte7daa122
      description: <p>the observable to the KeyVerifyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: KeyOperationResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public KeyOperationResult unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_operation_result
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: ServiceFuture<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<KeyOperationResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_operation_resulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: Observable<ServiceResponse<KeyOperationResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: >-
    <p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey._json_web_key_encryption_algorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_operation_resulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.models._deleted_key_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._deleted_key_item.yml
  name: DeletedKeyItem
  nameWithType: DeletedKeyItem
  fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
  type: Class
  summary: <p>The deleted key item containing the deleted key metadata and information about deletion. </p>
  syntax:
    content: public class DeletedKeyItem extends KeyItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeys(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl)
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl)
  fullName: Observable<Page<DeletedKeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<DeletedKeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKey(String vaultBaseUrl, String keyName)
  fullName: DeletedKeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public DeletedKeyBundle getDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_key_bundle
      description: <p>the DeletedKeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: ServiceFuture<DeletedKeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<DeletedKeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_key_bundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<DeletedKeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Retrieves the deleted key information plus its attributes. Authorization: Requires the keys/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_key_bundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKey(String vaultBaseUrl, String keyName)
  fullName: void com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public void purgeDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<Void> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified key. aka purges the key. Authorization: Requires the keys/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKey(String vaultBaseUrl, String keyName)
  fullName: KeyBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public KeyBundle recoverDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    return:
      type: com.microsoft.azure.keyvault.models._key_bundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: ServiceFuture<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<KeyBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._key_bundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: Observable<ServiceResponse<KeyBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: >-
    <p>Recovers the deleted key back to its current version under /keys. Authorization: Requires the keys/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._key_bundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models._secret_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._secret_bundle.yml
  name: SecretBundle
  nameWithType: SecretBundle
  fullName: com.microsoft.azure.keyvault.models.SecretBundle
  type: Class
  summary: <p>A secret consisting of a value, id and its attributes. </p>
  syntax:
    content: public class SecretBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecret(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models._secret_attributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._secret_attributes.yml
  name: SecretAttributes
  nameWithType: SecretAttributes
  fullName: com.microsoft.azure.keyvault.models.SecretAttributes
  type: Class
  summary: <p>The secret management attributes. </p>
  syntax:
    content: public class SecretAttributes
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  type: Method
  summary: >-
    <p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models._deleted_secret_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._deleted_secret_bundle.yml
  name: DeletedSecretBundle
  nameWithType: DeletedSecretBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
  type: Class
  summary: <p>A Deleted Secret consisting of its previous id, attributes and its tags, as well as information on when it will be purged. </p>
  syntax:
    content: public class DeletedSecretBundle extends SecretBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.deleteSecret(String vaultBaseUrl, String secretName)
  fullName: DeletedSecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public DeletedSecretBundle deleteSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_secret_bundle
      description: <p>the DeletedSecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: ServiceFuture<DeletedSecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<DeletedSecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<DeletedSecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_secret_bundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models._secret_attributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public SecretBundle getSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: >-
    <p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models._secret_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._secret_item.yml
  name: SecretItem
  nameWithType: SecretItem
  fullName: com.microsoft.azure.keyvault.models.SecretItem
  type: Class
  summary: <p>The secret item containing secret metadata. </p>
  syntax:
    content: public class SecretItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecrets(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersions(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models._deleted_secret_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._deleted_secret_item.yml
  name: DeletedSecretItem
  nameWithType: DeletedSecretItem
  fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
  type: Class
  summary: <p>The deleted secret item containing metadata about the deleted secret. </p>
  syntax:
    content: public class DeletedSecretItem extends SecretItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecrets(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl)
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl)
  fullName: Observable<Page<DeletedSecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<DeletedSecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: DeletedSecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public DeletedSecretBundle getDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_secret_bundle
      description: <p>the DeletedSecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: ServiceFuture<DeletedSecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<DeletedSecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_secret_bundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<DeletedSecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Retrieves the deleted secret information plus its attributes. Authorization: requires the secrets/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_secret_bundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: void com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public void purgeDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<Void> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified secret. aka purges the secret. Authorization: requires the secrets/purge permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public SecretBundle recoverDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Recovers the deleted secret back to its current version under /secrets. Authorization: requires the secrets/recover permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models._backup_secret_result
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._backup_secret_result.yml
  name: BackupSecretResult
  nameWithType: BackupSecretResult
  fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
  type: Class
  summary: <p>The backup secret result, containing the backup blob. </p>
  syntax:
    content: public class BackupSecretResult
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.backupSecret(String vaultBaseUrl, String secretName)
  fullName: BackupSecretResult com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public BackupSecretResult backupSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models._backup_secret_result
      description: <p>the BackupSecretResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  fullName: ServiceFuture<BackupSecretResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<BackupSecretResult> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public Observable<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._backup_secret_resulta08ddfce
      description: <p>the observable to the BackupSecretResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.backupSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: Observable<ServiceResponse<BackupSecretResult>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: >-
    <p>Requests that a backup of the specified secret be downloaded to the client. Authorization: requires the secrets/backup permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<BackupSecretResult>> backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._backup_secret_resulte7daa122
      description: <p>the observable to the BackupSecretResult object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreSecret(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: SecretBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  type: Method
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public SecretBundle restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models._secret_bundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: ServiceFuture<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreSecretAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: Observable<SecretBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  type: Method
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public Observable<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._secret_bundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.restoreSecretWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: Observable<ServiceResponse<SecretBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  type: Method
  summary: >-
    <p>Restores a backed up secret to a vault. Authorization: requires the secrets/restore permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._secret_bundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models._certificate_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._certificate_item.yml
  name: CertificateItem
  nameWithType: CertificateItem
  fullName: com.microsoft.azure.keyvault.models.CertificateItem
  type: Class
  summary: <p>The certificate item containing certificate metadata. </p>
  syntax:
    content: public class CertificateItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificates(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificates(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificates(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesAsync(final String,final Integer,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._deleted_certificate_bundle.yml
  name: DeletedCertificateBundle
  nameWithType: DeletedCertificateBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
  type: Class
  summary: <p>A Deleted Certificate consisting of its previous id, attributes and its tags, as well as information on when it will be purged. </p>
  syntax:
    content: public class DeletedCertificateBundle extends CertificateBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificate(String vaultBaseUrl, String certificateName)
  fullName: DeletedCertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public DeletedCertificateBundle deleteCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: ServiceFuture<DeletedCertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<DeletedCertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<DeletedCertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_certificate_bundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.models._contacts
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._contacts.yml
  name: Contacts
  nameWithType: Contacts
  fullName: com.microsoft.azure.keyvault.models.Contacts
  type: Class
  summary: <p>The contacts for the vault certificates. </p>
  syntax:
    content: public class Contacts
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateContacts(String,Contacts)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  fullName: Contacts com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  type: Method
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Contacts setCertificateContacts(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>the Contacts object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  type: Method
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateContactsAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  fullName: Observable<Contacts> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  type: Method
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateContactsWithServiceResponseAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  type: Method
  summary: >-
    <p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Contacts>> setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateContacts(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContacts(String vaultBaseUrl)
  fullName: Contacts com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContacts(String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Contacts getCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>the Contacts object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Contacts> getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl)
  fullName: Observable<Contacts> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Contacts> getCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Contacts>> getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateContacts(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContacts(String vaultBaseUrl)
  fullName: Contacts com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContacts(String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Contacts deleteCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: com.microsoft.azure.keyvault.models._contacts
      description: <p>the Contacts object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: ServiceFuture<Contacts> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl)
  fullName: Observable<Contacts> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Contacts>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. Authorization: requires the certificates/managecontacts permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Contacts>> deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._contactse7daa122
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.models._certificate_issuer_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._certificate_issuer_item.yml
  name: CertificateIssuerItem
  nameWithType: CertificateIssuerItem
  fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
  type: Class
  summary: <p>The certificate issuer item containing certificate issuer metadata. </p>
  syntax:
    content: public class CertificateIssuerItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuers(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuers(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl)
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl)
  fullName: Observable<Page<CertificateIssuerItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuers(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<CertificateIssuerItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models._issuer_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._issuer_bundle.yml
  name: IssuerBundle
  nameWithType: IssuerBundle
  fullName: com.microsoft.azure.keyvault.models.IssuerBundle
  type: Class
  summary: <p>The issuer for Key Vault certificate. </p>
  syntax:
    content: public class IssuerBundle extends IssuerBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuer(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  fullName: IssuerBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuerAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuerWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: IssuerBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models._issuer_credentials
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._issuer_credentials.yml
  name: IssuerCredentials
  nameWithType: IssuerCredentials
  fullName: com.microsoft.azure.keyvault.models.IssuerCredentials
  type: Class
  summary: <p>The credentials to be used for the certificate issuer. </p>
  syntax:
    content: public class IssuerCredentials
- uid: com.microsoft.azure.keyvault.models._organization_details
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._organization_details.yml
  name: OrganizationDetails
  nameWithType: OrganizationDetails
  fullName: com.microsoft.azure.keyvault.models.OrganizationDetails
  type: Class
  summary: <p>Details of the organization of the certificate issuer. </p>
  syntax:
    content: public class OrganizationDetails
- uid: com.microsoft.azure.keyvault.models._issuer_attributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._issuer_attributes.yml
  name: IssuerAttributes
  nameWithType: IssuerAttributes
  fullName: com.microsoft.azure.keyvault.models.IssuerAttributes
  type: Class
  summary: <p>The attributes of an issuer managed by the Key Vault service. </p>
  syntax:
    content: public class IssuerAttributes
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: >-
    <p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: IssuerBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: IssuerBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: >-
    <p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models._issuer_credentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models._organization_details
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models._issuer_attributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: IssuerBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public IssuerBundle getCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: IssuerBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public IssuerBundle deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models._issuer_bundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: ServiceFuture<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<IssuerBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public Observable<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._issuer_bundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: Observable<ServiceResponse<IssuerBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: >-
    <p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._issuer_bundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.models._certificate_operation
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._certificate_operation.yml
  name: CertificateOperation
  nameWithType: CertificateOperation
  fullName: com.microsoft.azure.keyvault.models.CertificateOperation
  type: Class
  summary: <p>A certificate operation is returned in case of asynchronous requests. </p>
  syntax:
    content: public class CertificateOperation extends CertificateOperation
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName)
  fullName: CertificateOperation com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateOperation com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.models._certificate_policy
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._certificate_policy.yml
  name: CertificatePolicy
  nameWithType: CertificatePolicy
  fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
  type: Class
  summary: <p>Management policy for a certificate. </p>
  syntax:
    content: public class CertificatePolicy
- uid: com.microsoft.azure.keyvault.models._certificate_attributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._certificate_attributes.yml
  name: CertificateAttributes
  nameWithType: CertificateAttributes
  fullName: com.microsoft.azure.keyvault.models.CertificateAttributes
  type: Class
  summary: <p>The certificate management attributes. </p>
  syntax:
    content: public class CertificateAttributes extends Attributes
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Creates a new certificate. If this is the first version, the certificate resource is created.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.models._certificate_bundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._certificate_bundle.yml
  name: CertificateBundle
  nameWithType: CertificateBundle
  fullName: com.microsoft.azure.keyvault.models.CertificateBundle
  type: Class
  summary: <p>A certificate bundle consists of a certificate (X509) plus its attributes. </p>
  syntax:
    content: public class CertificateBundle extends CertificateBundle
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatePolicy(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatePolicy(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  fullName: CertificatePolicy com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public CertificatePolicy getCertificatePolicy(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>the CertificatePolicy object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: ServiceFuture<CertificatePolicy> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatePolicyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificatePolicy> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatePolicyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificatePolicy>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_policye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificatePolicy(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: CertificatePolicy com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  type: Method
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public CertificatePolicy updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>the CertificatePolicy object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: ServiceFuture<CertificatePolicy> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificatePolicyAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: Observable<CertificatePolicy> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  type: Method
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public Observable<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_policya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: Observable<ServiceResponse<CertificatePolicy>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  type: Method
  summary: >-
    <p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The policy for the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_policye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; note the only elements being updated are the certificate's attributes.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models._certificate_policy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public CertificateBundle getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: >-
    <p>Gets information about a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateOperation(String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: CertificateOperation com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  type: Method
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateOperation updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateOperationAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  type: Method
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  type: Method
  summary: >-
    <p>Updates a certificate operation. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: CertificateOperation com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperation(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public CertificateOperation getCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Gets the operation associated with a specified certificate. Authorization: requires the certificates/get permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: CertificateOperation com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateOperation deleteCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_operation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: ServiceFuture<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateOperation> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_operationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.deleteCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateOperation>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Deletes the operation for a specified certificate. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_operatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificate(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificateAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: >-
    <p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. Authorization: requires the certificates/update permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models._certificate_attributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.models._deleted_certificate_item
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models._deleted_certificate_item.yml
  name: DeletedCertificateItem
  nameWithType: DeletedCertificateItem
  fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
  type: Class
  summary: <p>The deleted certificate item containing metadata about the deleted certificate. </p>
  syntax:
    content: public class DeletedCertificateItem extends CertificateItem
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificates(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl)
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl)
  fullName: Observable<Page<DeletedCertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificates(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesAsync(final String,final Integer,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<Page<DeletedCertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: DeletedCertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public DeletedCertificateBundle getDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models._deleted_certificate_bundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: ServiceFuture<DeletedCertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<DeletedCertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public Observable<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._deleted_certificate_bundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<DeletedCertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._deleted_certificate_bundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: void com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public void purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<Void> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public Observable<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.purgeDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<Void>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. Requires the explicit granting of the 'purge' permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: CertificateBundle com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public CertificateBundle recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models._certificate_bundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: ServiceFuture<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public ServiceFuture<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<CertificateBundle> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public Observable<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models._certificate_bundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.recoverDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: Observable<ServiceResponse<CertificateBundle>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: >-
    <p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes).</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <ulink url="https://myvault.vault.azure.net">https://myvault.vault.azure.net</ulink>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models._certificate_bundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNext(final String nextPageLink)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeyVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeyVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeysNext(final String nextPageLink)
  fullName: PagedList<KeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<KeyItem> getKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: ServiceFuture<List<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink)
  fullName: Observable<Page<KeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<KeyItem>> getKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._key_iteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<KeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier,attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._key_item2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNext(final String nextPageLink)
  fullName: PagedList<DeletedKeyItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedKeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_key_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink)
  fullName: Observable<Page<DeletedKeyItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_key_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<DeletedKeyItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List deleted keys in the specified vault. Authorization: Requires the keys/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_key_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNext(final String nextPageLink)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List secrets in a specified key vault. The LIST operation is applicable to the entire vault, however only the base secret identifier and attributes are provided in the response. Individual secret versions are not listed in the response.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNext(final String nextPageLink)
  fullName: PagedList<SecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public PagedList<SecretItem> getSecretVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: ServiceFuture<List<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink)
  fullName: Observable<Page<SecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getSecretVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<SecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List the versions of the specified secret. The LIST VERSIONS operation can be applied to all versions having the same secret name in the same key vault. The full secret identifier and attributes are provided in the response. No values are returned for the secrets and only current versions of a secret are listed.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNext(final String nextPageLink)
  fullName: PagedList<DeletedSecretItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedSecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_secret_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink)
  fullName: Observable<Page<DeletedSecretItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_secret_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<DeletedSecretItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List deleted secrets in the specified vault. Authorization: requires the secrets/list permission.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_secret_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNext(final String nextPageLink)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNext(final String nextPageLink)
  fullName: PagedList<CertificateIssuerItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuersNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateIssuerItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_issuer_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink)
  fullName: Observable<Page<CertificateIssuerItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_issuer_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateIssuersNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<CertificateIssuerItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_issuer_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNext(final String nextPageLink)
  fullName: PagedList<CertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: ServiceFuture<List<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink)
  fullName: Observable<Page<CertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getCertificateVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<CertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNext(final String nextPageLink)
  fullName: PagedList<DeletedCertificateItem> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: ServiceFuture<List<DeletedCertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models._deleted_certificate_itema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink)
  fullName: Observable<Page<DeletedCertificateItem>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models._deleted_certificate_iteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.getDeletedCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl
  href: com.microsoft.azure.keyvault.implementation._key_vault_client_base_impl.yml
  name: getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponse<Page<DeletedCertificateItem>>> com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the deleted certificates in the specified vault, currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models._deleted_certificate_item2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
